// Code generated by eddwise, DO NOT EDIT.

package filottobehave

import (
	"testing"

	"github.com/exelr/filotto/gen/filotto"

	"github.com/exelr/eddwise"
	"github.com/exelr/eddwise/mock"
)

type FilottoBehave struct {
	*mock.ChannelBehave
}

func NewFilottoBehave(t *testing.T) *FilottoBehave {
	return &FilottoBehave{
		ChannelBehave: mock.NewBehaveChannel(t),
	}
}

func (cb *FilottoBehave) Recv() filotto.FilottoRecv {
	return cb.ChannelBehave.Recv().(filotto.FilottoRecv)
}

func (cb *FilottoBehave) OnPlayerMove(clientId uint64, evt *filotto.PlayerMove, f ...func()) {
	cb.On(clientId,
		func(ctx eddwise.Context) error {
			return cb.Recv().OnPlayerMove(ctx, evt)
		}, evt, f...)
}

func (cb *FilottoBehave) OnQueueRequest(clientId uint64, evt *filotto.QueueRequest, f ...func()) {
	cb.On(clientId,
		func(ctx eddwise.Context) error {
			return cb.Recv().OnQueueRequest(ctx, evt)
		}, evt, f...)
}
